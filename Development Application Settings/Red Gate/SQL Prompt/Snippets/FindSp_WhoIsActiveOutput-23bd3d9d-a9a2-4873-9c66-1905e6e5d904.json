{
  "id": "23bd3d9d-a9a2-4873-9c66-1905e6e5d904",
  "prefix": "FindSp_WhoIsActiveOutput",
  "description": "KM: This will create a table in the DBA database and start logging sp_WhoIsActive to it.",
  "body": "/**********************************************************************************************************************\r\n** Instructions:    Set the 'GO [N]' number at the bottom of the SQL script below. 12 = 1 minute, 60 = 5 minutes, ...\r\n**                   There is a built in 7 retention days to keep data. If you wish to run this for an extended period \r\n**                   of time, use remote desktop server as your workstation might go to sleep.\r\n**\r\n**                  Use/copy this query below as a starter query to look a SQL command. You can copy it into a new SSMS \r\n**                  window to query the logged table even when this is script below is running.\r\n\r\nUSE VentureDBA;\r\nSELECT TOP (1000)\r\n    *\r\nFROM\r\n    dbo.WhoIsActive\r\nWHERE\r\n    start_time BETWEEN '2024-02-20 17:00:00.000' AND '2024-02-20 18:59:00.000'\r\n--AND CAST(sql_text AS varchar(MAX)) LIKE '%some-query-text%'\r\nORDER BY\r\n    start_time DESC;\r\n\r\n**********************************************************************************************************************/\r\nUSE VentureDBA;\r\nSET NOCOUNT ON;\r\n\r\nDECLARE\r\n    @DestinationDatabase                    nvarchar(128) = N'VentureDBA'\r\n   ,@DestinationTable                       nvarchar(128) = N'WhoIsActive'\r\n   ,@RetentionDays                          int           = 7\r\n   ,@TableSchema                            varchar(MAX)\r\n   ,@SQL                                    nvarchar(4000)\r\n   ,@Parameters                             nvarchar(500)\r\n   ,@WhoIsActive_collection_timeIndexExists bit\r\n   ,@WhoIsActive_start_timeIndexExists      bit;\r\n\r\nSET @DestinationTable = @DestinationDatabase + N'.dbo.' + @DestinationTable;\r\n\r\n\r\n/**********************************************************************************************************************\r\n** Create the logging table\r\n**********************************************************************************************************************/\r\nIF OBJECT_ID(@DestinationTable, N'U') IS NULL\r\n    BEGIN;\r\n        EXEC dbo.sp_WhoIsActive\r\n            @get_transaction_info = 1\r\n           ,@get_outer_command = 1\r\n           ,@get_plans = 1\r\n           ,@return_schema = 1\r\n           ,@schema = @TableSchema OUTPUT;\r\n        SET @TableSchema = REPLACE(@TableSchema, '<table_name>', @DestinationTable);\r\n        EXEC (@TableSchema);\r\n    END;\r\n\r\n\r\n/**********************************************************************************************************************\r\n** Create clustered index on collection_time\r\n**********************************************************************************************************************/\r\nSET @SQL = N'USE ' + QUOTENAME(@DestinationDatabase)\r\n           + N'; \r\nIF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(@DestinationTable) AND name = N''WhoIsActive_collection_time'') \r\nBEGIN\r\n    SET @WhoIsActive_collection_timeIndexExists = 0;\r\nEND;';\r\n\r\nSET @Parameters = N'@DestinationTable nvarchar(128), @WhoIsActive_collection_timeIndexExists bit OUTPUT';\r\n\r\nEXEC sys.sp_executesql\r\n    @stmt = @SQL\r\n   ,@params = @Parameters\r\n   ,@DestinationTable = @DestinationTable\r\n   ,@WhoIsActive_collection_timeIndexExists = @WhoIsActive_collection_timeIndexExists OUTPUT;\r\n\r\nIF @WhoIsActive_collection_timeIndexExists = 0\r\n    BEGIN;\r\n        SET @SQL = N'CREATE CLUSTERED INDEX WhoIsActive_collection_time ON ' + @DestinationTable + N'(collection_time ASC);';\r\n        EXEC (@SQL);\r\n    END;\r\n\r\n/**********************************************************************************************************************\r\n** Create non-clustered index on start_time\r\n**********************************************************************************************************************/\r\nSET @SQL = N'USE ' + QUOTENAME(@DestinationDatabase)\r\n           + N'; \r\nIF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(@DestinationTable) AND name = N''WhoIsActive_start_time'') \r\nBEGIN\r\n    SET @WhoIsActive_start_timeIndexExists = 0;\r\nEND;';\r\n\r\nSET @Parameters = N'@DestinationTable nvarchar(128), @WhoIsActive_start_timeIndexExists bit OUTPUT';\r\n\r\nEXEC sys.sp_executesql\r\n    @stmt = @SQL\r\n   ,@params = @Parameters\r\n   ,@DestinationTable = @DestinationTable\r\n   ,@WhoIsActive_start_timeIndexExists = @WhoIsActive_start_timeIndexExists OUTPUT;\r\n   \r\nIF @WhoIsActive_start_timeIndexExists = 0\r\n    BEGIN;\r\n        SET @SQL = N'CREATE NONCLUSTERED INDEX WhoIsActive_start_time ON ' + @DestinationTable + N'(start_time ASC);';\r\n        EXEC (@SQL);\r\n    END;\r\n\r\n\r\n/**********************************************************************************************************************\r\n** Collect activity into logging table\r\n**********************************************************************************************************************/\r\nEXEC dbo.sp_WhoIsActive\r\n    @get_transaction_info = 1\r\n   ,@get_outer_command = 1\r\n   ,@get_plans = 1\r\n   ,@destination_table = @DestinationTable;\r\n\r\n\r\n/**********************************************************************************************************************\r\n** Purge older data\r\n**********************************************************************************************************************/\r\nSET @SQL = N'DELETE FROM ' + @DestinationTable + N' WHERE collection_time < DATEADD(day, -' + CAST(@RetentionDays AS varchar(10)) + N', GETDATE());';\r\nEXEC (@SQL);\r\n\r\nWAITFOR DELAY '00:00:05';\r\nGO 12"
}