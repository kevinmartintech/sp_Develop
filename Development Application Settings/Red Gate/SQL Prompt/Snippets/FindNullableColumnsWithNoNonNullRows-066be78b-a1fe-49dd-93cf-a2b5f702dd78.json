{
  "id": "066be78b-a1fe-49dd-93cf-a2b5f702dd78",
  "prefix": "FindNullableColumnsWithNoNonNullRows",
  "description": "KM: Use this script to find nullable columns with no non-null rows.",
  "body": "/**********************************************************************************************************************\r\n** Nullable Columns with No Non-Null Rows Check\r\n**  Use to find nullable columns with no non-null rows.\r\n**  For more information see: https://www.spdevelop.org/best-practices-and-findings/table-conventions#150\r\n**  Can be intensive if no supporting indexes, so run outside of work hours.\r\n**********************************************************************************************************************/\r\nDECLARE @SchemaName sysname = NULL; /* Set to NULL to process all schemas. */\r\nDECLARE @TableName  sysname = NULL; /* Set to NULL to process all tables.  */\r\n\r\n/* End configurable variables */\r\nSET NOCOUNT ON;\r\n\r\nDECLARE @SQL nvarchar(MAX) = N'';\r\n\r\nSELECT\r\n    @SQL = @SQL + N'SELECT\r\n    SchemaName = ''' + s.name + N'''\r\n   ,TableName  = ''' + t.name + N'''\r\n   ,ColumnName = ''' + c.name + N'''\r\n   ,Details    = CASE \r\n                    WHEN EXISTS (\r\n                        SELECT 1 \r\n                        FROM ' + QUOTENAME(s.name) + N'.' + QUOTENAME(t.name) + N' \r\n                        WHERE ' + QUOTENAME(c.name) + N' IS NULL\r\n                    ) \r\n                    THEN ''Contains NULLs. The allow NULL setting is still valid.'' \r\n                    ELSE ''No NULLs found. Assess if it still makes sense to allow NULL.'' \r\n                 END\r\nUNION ALL\r\n'\r\nFROM\r\n    sys.columns        AS c\r\nINNER JOIN sys.tables  AS t ON c.object_id = t.object_id\r\nINNER JOIN sys.schemas AS s ON t.schema_id = s.schema_id\r\nWHERE\r\n    c.is_nullable = 1\r\n    AND (\r\n        (@SchemaName IS NULL AND @TableName IS NULL) OR\r\n        (s.name = @SchemaName AND t.name = @TableName)\r\n    )\r\nORDER BY\r\n    s.name, t.name, c.column_id;\r\n\r\n/* Remove the trailing \"UNION ALL\" and the line break if any SQL was built. */\r\nIF LEN(@SQL) > 0\r\n    SET @SQL = LEFT(@SQL, LEN(@SQL) - LEN(N'UNION ALL\r\n'));\r\nELSE\r\n    SET @SQL = N'SELECT NULL AS SchemaName, NULL AS TableName, NULL AS ColumnName, NULL AS Details WHERE 1 = 0;';\r\n\r\nEXEC sp_executesql @stmt = @SQL;\r\nGO"
}