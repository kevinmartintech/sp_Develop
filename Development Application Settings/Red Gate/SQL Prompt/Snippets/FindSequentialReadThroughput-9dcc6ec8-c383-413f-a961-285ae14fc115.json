{
  "id": "9dcc6ec8-c383-413f-a961-285ae14fc115",
  "prefix": "FindSequentialReadThroughput",
  "description": "KM: Finds the Sequential Read Throughput",
  "body": "/**********************************************************************************************************************\r\n** Measuring Sequential Read Throughput - Glenn Berry (https://glennsqlperformance.com)\r\n** YouTube: https://www.youtube.com/watch?v=Yjw2rICs1oU  \r\n**********************************************************************************************************************/\r\n\r\n/**********************************************************************************************************************\r\n** Get table size\r\n**********************************************************************************************************************/\r\nEXECUTE sp_spaceused N'[TABLE-SCHEMA-NAME]';\r\n\r\n/* Calculate size in MB */\r\nSELECT ???/1024.0 AS [SIZE (MB)]; /* Table size ??? MB */\r\n\r\n/**********************************************************************************************************************\r\n** Flush any dirty pages to disk\r\n**********************************************************************************************************************/\r\nCHECKPOINT;\r\nGO\r\n\r\n/**********************************************************************************************************************\r\n** Flush the buffer CACHE (Don't do this in Production)\r\n**  Use FindDataPagesInBufferPool snippet to verify\r\n**********************************************************************************************************************/\r\nDBCC DROPCLEANBUFFERS;\r\nGO\r\n\r\n/**********************************************************************************************************************\r\n** Turn on I/O statistics and time statistics\r\n**********************************************************************************************************************/\r\nSET STATISTICS IO ON;\r\nSET STATISTICS TIME ON;\r\nGO\r\n\r\n/**********************************************************************************************************************\r\n** Retrieve data from storage, index hint forces a table scan\r\n**********************************************************************************************************************/\r\nSELECT COUNT(*) AS [Row Count] FROM [TABLE-SCHEMA-NAME] WITH (INDEX(0));\r\n/* Paste in query statistics and count here\r\n\r\n\r\n*/\r\n\r\n/* Formula for calculating sequential read throughput from IO and time statistics\r\n   8 (KB/page) * (physical reads + read-ahead reads)/(elapsed time in ms)\r\n*/\r\nSELECT 8 * (??? + ???)/??? AS [MB/sec Sequential Read Throughput];\r\n/* ??? MB/sec Sequential Read Throughput */\r\n\r\n/**********************************************************************************************************************\r\n** From buffer pool, with different MAXDOP hints\r\n**********************************************************************************************************************/\r\nSELECT COUNT(*) AS [Row Count] FROM [TABLE-SCHEMA-NAME] WITH (INDEX(0)) OPTION (MAXDOP 1);\r\n/* Elapsed time = ??? ms | ??? MB/sec */\r\n\r\nSELECT COUNT(*) AS [Row Count] FROM [TABLE-SCHEMA-NAME] WITH (INDEX(0)) OPTION (MAXDOP 2);\r\n/* Elapsed time = ??? ms | ??? MB/sec */\r\n\r\nSELECT COUNT(*) AS [Row Count] FROM [TABLE-SCHEMA-NAME] WITH (INDEX(0)) OPTION (MAXDOP 3);\r\n/* Elapsed time = ??? ms | ??? MB/sec */\r\n\r\nSELECT COUNT(*) AS [Row Count] FROM [TABLE-SCHEMA-NAME] WITH (INDEX(0)) OPTION (MAXDOP 4);\r\n/* Elapsed time = ??? ms | ??? MB/sec */\r\n\r\nSELECT COUNT(*) AS [Row Count] FROM [TABLE-SCHEMA-NAME] WITH (INDEX(0)) OPTION (MAXDOP 5);\r\n/* Elapsed time = ??? ms | ??? MB/sec */\r\n\r\nSELECT COUNT(*) AS [Row Count] FROM [TABLE-SCHEMA-NAME] WITH (INDEX(0)) OPTION (MAXDOP 6);\r\n/* Elapsed time = ??? ms | ??? MB/sec */\r\n\r\nSELECT COUNT(*) AS [Row Count] FROM [TABLE-SCHEMA-NAME] WITH (INDEX(0)) OPTION (MAXDOP 7);\r\n/* Elapsed time = ??? ms | ??? MB/sec */\r\n\r\nSELECT COUNT(*) AS [Row Count] FROM [TABLE-SCHEMA-NAME] WITH (INDEX(0)) OPTION (MAXDOP 8);\r\n/* Elapsed time = ??? ms | ??? MB/sec */\r\n\r\n/* This lets SQL Server use as many cores as it wants */\r\nSELECT COUNT(*) AS [Row Count] FROM [TABLE-SCHEMA-NAME] WITH (INDEX(0)) OPTION (MAXDOP 0);\r\n/* Elapsed time = ??? ms | ??? MB/sec */\r\n\r\n/* Instance-level MAXDOP */\r\nSELECT COUNT(*) AS [Row Count] FROM [TABLE-SCHEMA-NAME] WITH (INDEX(0)); \r\n/* Elapsed time = ??? ms | ??? MB/sec */"
}