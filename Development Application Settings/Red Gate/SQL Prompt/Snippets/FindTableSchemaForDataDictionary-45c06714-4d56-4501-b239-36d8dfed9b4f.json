{
  "id": "45c06714-4d56-4501-b239-36d8dfed9b4f",
  "prefix": "FindTableSchemaForDataDictionary",
  "description": "KM: This will generate table column info results for exporting to a data dictionary worksheet",
  "body": "SET NOCOUNT ON;\r\nSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\nWITH TableInformation\r\n  AS (\r\n      SELECT\r\n          object_id           = T.object_id\r\n         ,[Schema Name]       = S.name\r\n         ,[Table Name]        = T.name\r\n         ,[Table Description] = CONVERT(nvarchar(MAX), EP.value)\r\n      FROM\r\n          sys.tables                          AS T\r\n      INNER JOIN sys.schemas                  AS S ON T.schema_id   = S.schema_id\r\n      LEFT OUTER JOIN sys.extended_properties AS EP ON EP.major_id  = T.object_id\r\n                                                    AND EP.minor_id = 0\r\n                                                    AND EP.name     = N'MS_Description'\r\n      WHERE\r\n          T.type          = N'U'\r\n      AND T.is_ms_shipped = 0\r\n      AND T.name NOT IN (N'sysdiagrams')\r\n  )\r\n,ForeignKeyInformation AS (\r\n    SELECT\r\n        sub.object_id,\r\n        sub.column_id,\r\n        [Referenced Schema.Table.Column List] = STRING_AGG(sub.[Referenced Column], N', '),\r\n        [Foreign Key List]                    = STRING_AGG(sub.[Foreign Key Name], N', '),\r\n        [Foreign Key Description List]        = STRING_AGG(sub.[Foreign Key Description], N', '),\r\n        [Foreign Key Trust]                   = STRING_AGG(sub.[Foreign Key Trust], N', ')\r\n    FROM (\r\n        SELECT DISTINCT\r\n            C1.object_id,\r\n            C1.column_id,\r\n            [Referenced Column]   = S2.name + N'.' + T2.name + N'.' + C2.name,\r\n            [Foreign Key Name]    = O.name,\r\n            [Foreign Key Description] = CONVERT(nvarchar(MAX), EP.value),\r\n            [Foreign Key Trust]   = IIF(fk.is_not_trusted = 0, N'Trusted', N'Untrusted')\r\n        FROM sys.foreign_key_columns AS FKC\r\n        INNER JOIN sys.foreign_keys AS fk ON FKC.parent_object_id = fk.parent_object_id\r\n        INNER JOIN sys.objects AS O ON O.object_id = FKC.constraint_object_id\r\n        LEFT OUTER JOIN sys.extended_properties AS EP \r\n            ON O.object_id = EP.major_id AND EP.minor_id = 0 AND EP.name = N'MS_Description'\r\n        INNER JOIN sys.tables AS T1 ON T1.object_id = FKC.parent_object_id\r\n        INNER JOIN sys.schemas AS S1 ON T1.schema_id = S1.schema_id\r\n        INNER JOIN sys.columns AS C1 ON C1.column_id = FKC.parent_column_id AND C1.object_id = T1.object_id\r\n        INNER JOIN sys.tables AS T2 ON T2.object_id = FKC.referenced_object_id\r\n        INNER JOIN sys.schemas AS S2 ON T2.schema_id = S2.schema_id\r\n        INNER JOIN sys.columns AS C2 ON C2.column_id = FKC.referenced_column_id AND C2.object_id = T2.object_id\r\n    ) sub\r\n    GROUP BY sub.object_id, sub.column_id\r\n)\r\n,CheckConstraintInformation\r\n  AS (\r\n      SELECT\r\n          C.object_id\r\n         ,C.column_id\r\n         ,[Check Constraint List]             = STRING_AGG(CC.name, N', ')\r\n         ,[Check Constraint Definition List]  = STRING_AGG(CC.definition, N', ')\r\n         ,[Check Constraint Description List] = STRING_AGG(CONVERT(nvarchar(MAX), EP.value), N', ')\r\n      FROM\r\n          sys.check_constraints               AS CC\r\n      LEFT OUTER JOIN sys.extended_properties AS EP ON CC.object_id        = EP.major_id\r\n                                                    AND EP.minor_id        = 0\r\n                                                    AND EP.name            = N'MS_Description'\r\n      INNER JOIN sys.columns                  AS C ON CC.parent_object_id  = C.object_id\r\n                                                   AND CC.parent_column_id = C.column_id\r\n      INNER JOIN sys.tables                   AS T ON CC.parent_object_id  = T.object_id\r\n      GROUP BY\r\n          C.object_id\r\n         ,C.column_id\r\n  )\r\nSELECT\r\n    [Schema Name]                         = TD.[Schema Name]\r\n   ,[Table Name]                          = TB.name\r\n   ,[Column Name]                         = C.name\r\n   ,[Is Primary Key]                      = IIF(C.is_identity = 1, N'TRUE', N'FALSE')\r\n   ,[Data Type]                           = TY.name + CASE WHEN TY.name IN (N'varchar', N'char', N'nvarchar', N'nchar', N'varbinary', N'binary')\r\n                                                               THEN N'(' + CASE C.max_length\r\n                                                                               WHEN -1\r\n                                                                                   THEN N'MAX'\r\n                                                                               ELSE CONVERT(varchar(50), IIF(TY.name IN (N'nvarchar', N'nchar'), C.max_length / 2, C.max_length))\r\n                                                                           END + N')'\r\n                                                          WHEN TY.name IN (N'datetime2', N'datetimeoffset', N'time')\r\n                                                              THEN N'(' + CONVERT(varchar(50), C.scale) + N')'\r\n                                                          WHEN TY.name IN (N'decimal', N'numeric')\r\n                                                              THEN N'(' + CONVERT(varchar(50), C.precision) + N',' + CONVERT(varchar(50), C.scale) + N')'\r\n                                                          ELSE N''\r\n                                                      END\r\n   ,[Allow Null]                          = IIF(C.is_nullable = 1, N'TRUE', N'FALSE')\r\n   ,[Is Identity]                         = IIF(C.is_identity = 1, N'TRUE', N'FALSE')\r\n   ,[Is Masked]                           = IIF(C.is_masked = 1, N'TRUE', N'FALSE')\r\n   ,[Is Computed]                         = IIF(C.is_computed = 1, N'TRUE', N'FALSE')\r\n   ,[Default Value]                       = ISNULL(DC.definition, N'')\r\n   ,[Column Description]                  = COALESCE(CONVERT(nvarchar(MAX), EP.value), N'')\r\n   ,[Table Description]                   = ISNULL(TD.[Table Description], N'')\r\n   ,[Referenced Schema.Table.Column List] = ISNULL(FKI.[Referenced Schema.Table.Column List], N'')\r\n   ,[Foreign Key List]                    = ISNULL(FKI.[Foreign Key List], N'')\r\n   ,[Foreign Key Description List]        = ISNULL(FKI.[Foreign Key Description List], N'')\r\n   ,[Foreign Key Trust]                   = ISNULL(FKI.[Foreign Key Trust], N'')\r\n   ,[Check Constraint List]               = ISNULL(CCI.[Check Constraint List], N'')\r\n   ,[Check Constraint Description List]   = ISNULL(CCI.[Check Constraint Description List], N'')\r\n   ,[Check Constraint Definition List]    = ISNULL(CCI.[Check Constraint Definition List], N'')\r\nFROM\r\n    sys.tables                             AS TB\r\nLEFT OUTER JOIN TableInformation           AS TD ON TB.object_id         = TD.object_id\r\nLEFT OUTER JOIN sys.columns                AS C ON C.object_id           = TB.object_id\r\nLEFT OUTER JOIN ForeignKeyInformation      AS FKI ON C.object_id         = FKI.object_id\r\n                                                  AND C.column_id        = FKI.column_id\r\nLEFT OUTER JOIN CheckConstraintInformation AS CCI ON C.object_id         = CCI.object_id\r\n                                                  AND C.column_id        = CCI.column_id\r\nINNER JOIN sys.types                       AS TY ON C.system_type_id     = TY.system_type_id\r\n                                                 AND C.user_type_id      = TY.user_type_id\r\nLEFT OUTER JOIN sys.default_constraints    AS DC ON DC.parent_object_id  = TB.object_id\r\n                                                 AND DC.parent_column_id = C.column_id\r\nLEFT OUTER JOIN sys.extended_properties    AS EP ON TB.object_id         = EP.major_id\r\n                                                 AND EP.minor_id         = C.column_id\r\n                                                 AND EP.name             = N'MS_Description'\r\n                                                 AND EP.class            = 1\r\nWHERE\r\n    TB.name NOT IN (N'sysdiagrams')\r\nORDER BY\r\n    TD.[Schema Name]\r\n   ,TD.[Table Name]\r\nOPTION (RECOMPILE);"
}